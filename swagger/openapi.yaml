openapi: 3.0.3
info:
  version: 1.0.0
  title: API интернет-магазина Magic Shop
  description: |
    ## Общие сведения

    В документе описано REST API интернет-магазина Magic Shop.

    Основные принципы, на которых построено данное API, описаны в инструкции по [ссылке](https://github.com/sequenia/online-store-api).

    ## Формат данных

    API принимает и возвращает данные в формате JSON.

    ## Формат ответа от сервера

    Успешный ответ на запрос всегда возвращается с http-кодом 200. Тело ответа всегда содержит объект. Поля объекта варьируются в зависимости от запроса.

    Все ошибочные ответы от сервера приходят в едином формате:

    ```json
    {
      "message": "",
      "code": "",
      "errors": {}
    }
    ```

    Описание полей:
    - `message` - `String`. Локализованное сообщение для пользователя.
    - `code` - `String`.  Код ошибки. Может быть использован для обработки какой-либо логики на клиенте.
    - `errors` - `Object`. Объект с **Детальной информацией об ошибках**. Может быть равно `null`

    ## Детальная информация об ошибках

    **Детальная информация об ошибках** имеет следуюущую структуру:

    ```json
    {
      "entity_name": {
        "fields": {
          "field_name": [""],
        },
        "first_nested_object_errors": {
          "fields": {
            "first_nested_object_field_name": [""],
          }
        },
        "second_nested_object_errors": {
          "fields": {
            "second_nested_object_field_name": [""],
          }
        },
        "nested_array_errors": [
          {
            "index": 1,
            "fields": {
              "nested_array_object_field_name": [""],
            }
          }
        ],
        "other_nested_array_errors": [
          {
            "index": 3,
            "fields": {
              "other_nested_array_object_field_name": [""],
            }
          }
        ]
      }
    }
    ```

    Описание полей:
     - `entity_name` - Объект, при отправке которого произошла ошибка, имя совпадает с именем объекта, отправленного в теле `POST`- или `PUT`-запроса. Например, если в запрос был передан объект `user`, `entity_name` будет также равно `user`
       - `fields` - `Object`. Содержит информацию об ошибках в тех полях, которые являются примитивами (строки, числа), а так же ошибки о вложенных объектах и массивах. **Ключ** - имя поля. **Значение** - массив ошибок.
       - `nested_object_errors` - `Object`. Содержит информацию об ошибках в полях вложенного объекта. **Ключ** - имя вложенного объекта. **Значение** - объект с **Детальной информацией об ошибках** во вложенном объекте.
       - `nested_array_errors` - `Object`. Содержит информацию об ошибках в полях вложенных массивов. **Ключ** - имя вложенного массива. **Значение** - массив с объектами, каждый из которых - это **Детальная информация об ошибках**, дополненная индексом объекта в массиве из тела запроса.

    Примеры ошибочных ответов от сервера с **Детальной информацией об ошибках** и без нее:
    
    ```json
    {
      "message": "Вы неавторизованы",
      "code": "unauthorized",
      "errors": null
    }
    ```

    ```json
    {
      "message": "Данные профиля пользователя не обновлены",
      "code": "user_not_updated",
      "errors": {
        "user": {
          "fields": {
            "first_name": ["Слишком длинное", "Имеет недопустимые символы"],
            "documents": ["Необходимо добавить как минимум 2 документа"]
          },
          "address": {
            "fields": {
              "country": ["Такой страны не существует"]
            }
          },
          "documents": [
            "index": 1,
            "fields": {
              "country": ["Такой страны не существует"]
            }
          ]
        }
      }
    }
    ```

    Обоснование формата и дополнительные примеры можно посмотреть по [ссылке](https://github.com/sequenia/online-store-api/blob/master/docs/rest.md#%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D1%8F-%D0%BE%D0%B1-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%B0%D1%85-%D0%BF%D1%80%D0%B8-%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B8-%D0%B8-%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B8).

    ## Аутентификация и авторизация

    Авторизация запросов производится путём подстановки JWT Access Token-а в заголовок `Authorization` в следующем виде (подстроку `{ACCESS_TOKEN}` необходимо заменить на реальное значение):

    ```
    Authorization: Bearer {ACCESS_TOKEN}
    ```

    Access Token выдается после Аутентификации или Регистрации пользователя.

    Некоторые запросы, например, работа с корзиной, требуют обязательной передачи Access Token-а, но могут быть выполнены для анонимных пользователей. Для этого необходимо предварительно выполнить специальный запрос на Регистрацию анонимного пользователя и получить Access Token.

    Подробнее описано по следующей [ссылке](https://github.com/sequenia/online-store-api/blob/master/docs/authorization.md).
servers:
  - url: 'https://online-store.com/api/v1'
security:
  - BearerAuth: []
tags:
  $ref: './_tags.yaml'
paths:
  $ref: './_paths.yaml'
components:
  parameters:
    $ref: './_parameters.yaml'
  schemas:
    $ref: './_schemas.yaml'
  responses:
    $ref: './_responses.yaml'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
