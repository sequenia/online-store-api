summary: Обновление информации для оформления заказа
description: |
  Обновляет информацию для оформления текущего заказа.

  Можно независимо обновлять разные данные заказа отдельными запросами, передавая только соответствующие ключи, например:
  - Для обновления покупателя передать только ключ `order.customer`.
  - Для обновления получателя передать только ключ `order.recipient`.
  - Для выбора способа получения заказа передать только ключ `order.delivery.rateId`.
  - и т.д.

  Запрос работает в двух режимах:
  - Сохранение данных без перехода на следующий этап.
  - Сохранение данных с переходом на следующий этап.

  Чтобы только обновить данные, передайте параметр `next` со значением `false`. Это удобно, если:
  - Пользователь не должен заполнять данные последовательно и видит все этапы оформления заказа на одном экране. В таком случае завершить оформление заказа можно запросом "Перевод заказа на максимально возможный этап".
  - Пользователь должен оформлять заказ последовательно по этапам, но сохранение данных и переход на следующий этап являются отдельными операциями. Например, предусморено автоматическое сохранение данных после окончания ввода. В таком случае перевести заказа на следующий этап можно запросом "Перевод заказа на следующий этап".

  Чтобы перевести заказ на следующий этап при обновлении данных, передайте параметр `next` со значением `true`. Это удобно если:
   - Пользователь должен оформлять заказ последовательно по этапам, и сохранение данных выполняется одновременно с переходом на следующий этап.

  Если в запрос переданы данные, относящиеся не к текущему этапу заказа, а к одному из предыдущих, то перед валиадцией данных заказ будет переведен в соответствующий предыдущий статус.

  Возможные коды ошибок:
  - `not_valid` - Переданные поля не прошли валидацию
  - `unauthorized` - Требуется авторизация
tags:
  - Оформление заказа
requestBody:
  description: Данные для оформления заказа
  content:
    application/json:
      schema:
        type: object
        properties:
          order:
            $ref: '../../orders/schemas/UpdateCheckoutOrder.yaml'
          next:
            type: boolean
            description: Перевести ли заказ на следующий этап
            example: false
responses:
  '200':
    description: Успех
    content:
      application/json:
        schema:
          allOf:
            - $ref: '../../base/schemas/SuccessResponse.yaml'
            - type: object
              properties:
                data:
                  properties:
                    order:
                      $ref: '../../orders/schemas/ShowCheckoutOrder.yaml'
  '422':
    description: Ошибка в данных
    content:
      application/json:
        schema:
          $ref: '../../base/schemas/ErrorResponse.yaml'
        examples:
          NotValid:
            allOf:
              - $ref: '../../base/examples/ErrorResponse.yaml'
              - $ref: '../../checkout/examples/CheckoutNotValidErrorResponse.yaml'
              - summary: Переданные поля не прошли валидацию
                value:
                  errorCode: not_valid
                  errorMessage: Проверьте введенные значения
  '401':
    $ref: '../../base/responses/Unauthorized.yaml'
