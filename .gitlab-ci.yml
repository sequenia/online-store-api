image: node:12

stages:
  - build
  - deploy
  - notify_success
  - notify_failure

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

.init-ssh-script: &init-ssh-script
  - echo "Initializing SSH"
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - echo "SSH initialized"

.upload-build-script: &upload-build-script
  - echo "Uploading build"
  - scp -P $SSH_PORT build/swagger/online_store_api.yaml $DEPLOY_USER@$SERVER_ADDRESS:$RELEASE_PATH/online_store_api.yaml
  - echo "Build uploaded"

.build:
  stage: build
  tags:
    - web
  script:
    - yarn install
    - yarn run bundle
  artifacts:
    paths:
      - build/

.deploy:
  stage: deploy
  tags:
    - web
  script:
    - *init-ssh-script
    - *upload-build-script

.notify_success:
  stage: notify_success
  tags:
    - web
  script:
    - ./gitlab_ci_slack_notification.sh -s success

.notify_failure:
  stage: notify_failure
  tags:
    - web
  script:
    - ./gitlab_ci_slack_notification.sh -s failure
  when: on_failure

build:production:
  extends: .build
  only:
    refs:
      - swagger
  environment: production

deploy:production:
  extends: .deploy
  only:
    refs:
      - swagger
  environment: production

notify_success:production:
  extends: .notify_success
  only:
    refs:
      - swagger
  environment: production

notify_failure:production:
  extends: .notify_failure
  only:
    refs:
      - swagger
  environment: production
